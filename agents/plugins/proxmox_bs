#!/bin/bash

# Copyright (c) 2021 inett GmbH
# License: GNU General Public License v2
# A file is subject to the terms and conditions defined in the file LICENSE,
# which is part of this source code package.

inpath() {
    command -v "${1:?No command to test}" >/dev/null 2>&1
}

printf "<<<proxmox_bs>>>\n"

printf "===requirements===\n"
requirement() {
  inpath "$1"; RC=$?
  printf '%s %s\n' "$RC" "$1"
}
requirements() {
  RC=0
  while read -r req; do
    line=$( requirement $req )
    trc=$( printf "$line" | cut -d ' ' -f 1 )
    echo $line
    [ "$trc" != "0" ] && RC=1
  done
  return $RC
}
cat <<. | requirements || exit 0
proxmox-backup-manager
proxmox-backup-client
jq
.

command_section() {
  PIPE=
  SECTION_POSTFIX=
  while [[ "$1" == -* ]]; do
    if [ "$1" == "-P" ]; then
      PIPE="${PIPE} | $2"
      shift 2
    fi
    if [ "$1" == "-t" ]; then
      PIPE="${PIPE} | tee $2"
      shift 2
    fi
    if [ "$1" == "-p" ]; then
      SECTION_POSTFIX=$2
      shift 2
    fi
  done
  cmd=$1
  shift
  printf '===%s===%s\n' "$cmd" "$SECTION_POSTFIX"
  # shellcheck disable=SC2086
  echo /bin/env $cmd $* $PIPE >&2
  # shellcheck disable=SC2086
  eval /bin/env $cmd $* $PIPE
}

source /etc/check_mk/proxmox_bs.env
PBS_REPO="${PBS_USERNAME}@localhost"
#proxmox-backup-client login #Not needed? Causes long delay.

OUTPUT_FORMAT="--output-format json-pretty"

command_section "proxmox-backup-manager versions" $OUTPUT_FORMAT
TMP_DATASTORES=$( mktemp -p /tmp/ )
command_section -t "$TMP_DATASTORES" \
  "proxmox-backup-manager datastore list" $OUTPUT_FORMAT

command_section "proxmox-backup-manager task list" $OUTPUT_FORMAT

TMP_UPIDS=$( mktemp -p /tmp/ )

TMP_GC_FILES=$( mktemp -p /tmp/ )
jq -r '.[].name' "$TMP_DATASTORES" | while read -r name; do
  TMP_GC=$( mktemp -p /tmp/ )
  printf '%s' "$TMP_GC" >> "$TMP_GC_FILES"
  command_section -t "$TMP_GC" -p "$name" \
    "proxmox-backup-manager garbage-collection status" "$name" $OUTPUT_FORMAT
  jq -r '.upid' "$TMP_GC" >> "$TMP_UPIDS"

  #for each namespace in repository
  TMP_NAMESPACE=$( mktemp -p /tmp/ )
  ns=$(/bin/env proxmox-backup-client namespace list --repository "$PBS_REPO:$name" --output-format text)

  #concat all jsons from each namespace
  currlist="[]" 
  echo "===proxmox-backup-client list===$name" 
  while IFS= read -r line; do
     l=$(/bin/env proxmox-backup-client list --repository "$PBS_REPO:$name" --ns $line $OUTPUT_FORMAT)
     currlist=$(jq -s 'add' <(echo $currjson) <(echo $l))
  done <<< "$ns"
  echo $currlist

  #concat all jsons from each namespace 
  currsnap="[]" 
  echo "===proxmox-backup-client snapshot list===$name"
  while IFS= read -r line; do
     j=$(/bin/env proxmox-backup-client snapshot list --repository "$PBS_REPO:$name" --ns $line $OUTPUT_FORMAT)
     currsnap=$(jq -s 'add' <(echo $currsnap) <(echo $j))
  done <<< "$ns"
  echo $currsnap

  command_section -p "$name" \
    "proxmox-backup-client status" --repository "$PBS_REPO:$name" \
    $OUTPUT_FORMAT
  proxmox-backup-client logout --repository "$PBS_REPO:$name" > /dev/null 2>&1
done

# shellcheck disable=SC2086 disable=SC2002
cat $TMP_UPIDS | while read -r upid; do
  command_section -P "sed '/^Removed /,\$!d'" -p "$upid" \
    "proxmox-backup-manager task log" "${upid//\\/\\\\}" '2>&1'
done

export PBS_PASSWORD=

echo "$TMP_GC_FILES" >> "$TMP_GC_FILES"

# shellcheck disable=SC2086 disable=SC2046 disable=SC2002 disable=SC2153
rm -vf $TMP_DATASTORE $TMP_UPIDS $(cat $TMP_GC_FILES | xargs) >&2

echo "===EOD==="
echo "="

